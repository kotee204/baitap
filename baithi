using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Xml.Linq;

namespace De01
{
    public partial class Form1 : Form
    {
        private string connectionString = "Data Source=localhost;Initial Catalog=QuanLySV;Integrated Security=True";
        public Form1()
        {
            InitializeComponent();
            Model1 context = new Model1();
            List<Lop> listLop = context.Lop.ToList(); //lấy các khoa
            List<Sinhvien> listSinhvien = context.Sinhvien.ToList(); //lấy sinh viên
            BindGrid(listLop);
            BindGrid(listSinhvien);
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            LoadClasses();
            LoadStudents();
            UpdateControlStates();
           

        }


        private void LoadClasses()
        {
            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                try
                {
                    string query = "SELECT MaLop, TenLop FROM Lop";
                    SqlDataAdapter adapter = new SqlDataAdapter(query, conn);
                    DataTable dt = new DataTable();
                    adapter.Fill(dt);

                    if (dt.Rows.Count == 0)
                    {
                        MessageBox.Show("Không có dữ liệu lớp nào trong cơ sở dữ liệu.", "Thông báo");
                    }

                    cboLop.DisplayMember = "TenLop";
                    cboLop.ValueMember = "MaLop";
                    cboLop.DataSource = dt;
                }
                catch (Exception ex)
                {
                    MessageBox.Show("Lỗi khi tải dữ liệu lớp: " + ex.Message, "Lỗi");
                }
            }
        }

        private void LoadStudents()
        {
            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                string query = "SELECT * FROM Sinhvien";
                SqlDataAdapter adapter = new SqlDataAdapter(query, conn);
                DataTable dt = new DataTable();
                adapter.Fill(dt);

                dgvSinhvien.DataSource = dt;
            }
        }

        private void UpdateControlStates()
        {
            bool isEditing = dgvSinhvien.SelectedRows.Count > 0;
            txtMaSV.Enabled = !isEditing;
            btThem.Enabled = !isEditing;
            btSua.Enabled = isEditing;
            btXoa.Enabled = isEditing;
        }
        private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (cboLop.SelectedValue != null)
            {
                string selectedClass = cboLop.SelectedValue.ToString();
                MessageBox.Show("Mã lớp được chọn: " + selectedClass, "Thông báo");
            }
        }

        private void txtMaSV_TextChanged(object sender, EventArgs e)
        {
            UpdateSaveButtonsState(true);
        }

        private void btThem_Click(object sender, EventArgs e)
        {
            if (!string.IsNullOrWhiteSpace(txtMaSV.Text) &&!string.IsNullOrWhiteSpace(txtHotenSV.Text) &&!string.IsNullOrWhiteSpace(cboLop.Text))
            {
                dgvSinhvien.Rows.Add(txtMaSV.Text, txtHotenSV.Text, dtNgaysinh.Value.ToString("dd/MM/yyyy"), cboLop.Text);

            }
            else
            {
                MessageBox.Show("Vui lòng nhập đầy đủ thông tin!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }

        }
        private void BindGrid(List<Lop> listLop)
        {
            dgvSinhvien.Rows.Clear();
            foreach (var item in listLop)
            {
                int index = dgvSinhvien.Rows.Add(); 
                dgvSinhvien.Rows[index].Cells[3].Value = item.MaLop; 
            }
        }
        private void BindGrid(List<Sinhvien> listSinhVien)
        {
         

            dgvSinhvien.Rows.Clear();
            foreach (var item in listSinhVien)
            {
                int index = dgvSinhvien.Rows.Add();
                dgvSinhvien.Rows[index].Cells[0].Value = item.MaSV;
                dgvSinhvien.Rows[index].Cells[1].Value = item.HotenSV;
                dgvSinhvien.Rows[index].Cells[2].Value = item.NgaySinh;
                dgvSinhvien.Rows[index].Cells[3].Value = item.MaLop;
            }
           

        }
        private void btSua_Click(object sender, EventArgs e)
        {
            if (dgvSinhvien.SelectedRows.Count == 0) return;

            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                string query = "UPDATE Sinhvien SET HotenSV = @HotenSV, NgaySinh = @NgaySinh, MaLop = @MaLop WHERE MaSV = @MaSV";
                SqlCommand cmd = new SqlCommand(query, conn);
                cmd.Parameters.AddWithValue("@MaSV", txtMaSV.Text);
                cmd.Parameters.AddWithValue("@HotenSV", txtHotenSV.Text);
                cmd.Parameters.AddWithValue("@NgaySinh", dtNgaysinh.Value);
                cmd.Parameters.AddWithValue("@MaLop", cboLop.SelectedValue);

                conn.Open();
                cmd.ExecuteNonQuery();
                conn.Close();

                LoadStudents();
            }
        }

        private void btXoa_Click(object sender, EventArgs e)
        {
            if (dgvSinhvien.SelectedRows.Count > 0)
            {
                DialogResult result = MessageBox.Show("Bạn có chắc chắn muốn xóa dòng đã chọn?", "Xác nhận", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                if (result == DialogResult.Yes)
                {
                    dgvSinhvien.Rows.RemoveAt(dgvSinhvien.SelectedRows[0].Index);
                    MessageBox.Show("Xóa thành công!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
            }
            else
            {
                MessageBox.Show("Vui lòng chọn dòng để xóa!", "Thông báo", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }

        private void lvSinhvien_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            if (dgvSinhvien.SelectedRows.Count > 0)
            {
                DataGridViewRow selectedRow = dgvSinhvien.SelectedRows[0];
                txtMaSV.Text = selectedRow.Cells["MaSV"].Value.ToString();
                txtHotenSV.Text = selectedRow.Cells["HotenSV"].Value.ToString();
                dtNgaysinh.Value = DateTime.Parse(selectedRow.Cells["NgaySinh"].Value.ToString());
                cboLop.SelectedValue = selectedRow.Cells["MaLop"].Value.ToString();
            }
            else
            {
                txtMaSV.Clear();
                txtHotenSV.Clear();
                dtNgaysinh.Value = DateTime.Now;
                cboLop.SelectedIndex = -1;
            }

            UpdateControlStates();
        }

        private void button6_Click(object sender, EventArgs e)
        {
            Close();
        }

        private void button7_Click(object sender, EventArgs e)
        {
            string searchName = txtHotenSV.Text.Trim();
            foreach (DataGridViewRow row in dgvSinhvien.Rows)
            {
                if (row.Cells["HotenSV"].Value.ToString().Contains(searchName))
                {
                    row.Selected = true;
                    dgvSinhvien.FirstDisplayedScrollingRowIndex = row.Index;
                    return;
                }
            }

            MessageBox.Show("No student found with the given name.", "Search Result");
        }

        private void button3_Click(object sender, EventArgs e)
        {
            SaveChanges();

            // Tắt trạng thái chỉnh sửa
            UpdateSaveButtonsState(false);

            MessageBox.Show("Dữ liệu đã được lưu thành công!", "Thông báo");
        }

        private void SaveChanges()
        {
            using (SqlConnection conn = new SqlConnection(connectionString))
            {
                string query = "UPDATE Sinhvien SET HotenSV = @HotenSV, NgaySinh = @NgaySinh, MaLop = @MaLop WHERE MaSV = @MaSV";
                SqlCommand cmd = new SqlCommand(query, conn);
                cmd.Parameters.AddWithValue("@MaSV", txtMaSV.Text);
                cmd.Parameters.AddWithValue("@HotenSV", txtHotenSV.Text);
                cmd.Parameters.AddWithValue("@NgaySinh", dtNgaysinh.Value);
                cmd.Parameters.AddWithValue("@MaLop", cboLop.SelectedValue);

                conn.Open();
                cmd.ExecuteNonQuery();
                conn.Close();
            }
        }
        private void UpdateSaveButtonsState(bool isEditing)
        {
            btnLuu.Enabled = isEditing;       // Bật nút Lưu khi đang chỉnh sửa
            btnKhongLuu.Enabled = isEditing; // Bật nút Không lưu khi đang chỉnh sửa
        }

        private void txtHotenSV_TextChanged(object sender, EventArgs e)
        {
            UpdateSaveButtonsState(true);
        }

        private void dtNgaysinh_ValueChanged(object sender, EventArgs e)
        {
            UpdateSaveButtonsState(true);
        }
    }

}
